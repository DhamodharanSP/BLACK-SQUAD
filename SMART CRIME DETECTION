import cv2
import torch
import os
import datetime
import warnings
warnings.filterwarnings("ignore", category=FutureWarning)
  
model = torch.hub.load('ultralytics/yolov5', 'custom', path='yolov5s.pt')  

cap = cv2.VideoCapture(0)

output_folder = "recordings"
os.makedirs(output_folder, exist_ok=True)

fourcc = cv2.VideoWriter_fourcc(*'mp4v')  
recording = False
video_writer = None

while True:
    ret, frame = cap.read()
    if not ret:
        break

    results = model(frame)
    detections = results.xyxy[0]  

    for *box, conf, cls in detections:
        x1, y1, x2, y2 = map(int, box)
        label = model.names[int(cls)]
        
        if label == 'person':
            color = (0, 255, 0)  
            cv2.rectangle(frame, (x1, y1), (x2, y2), color, 2)
            cv2.putText(frame, f"{label} {conf:.2f}", (x1, y1 - 5), cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)

            weapon_detected = False
            for *box, conf, cls in detections:
                if model.names[int(cls)] in ['knife', 'gun']:  
                    weapon_detected = True
                    wx1, wy1, wx2, wy2 = map(int, box)
                    color = (0, 0, 255)  
                    cv2.rectangle(frame, (wx1, wy1), (wx2, wy2), color, 2)
                    cv2.putText(frame, f"{model.names[int(cls)]} {conf:.2f}", (wx1, wy1 - 5), cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 2)

            if weapon_detected and not recording:
                recording = True
                now = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
                video_writer = cv2.VideoWriter(os.path.join(output_folder, f"recording_{now}.mp4"), fourcc, 20.0, (frame.shape[1], frame.shape[0]))

        if weapon_detected:
            if video_writer is not None:
                video_writer.write(frame)  

    if recording:
        if not weapon_detected:
            recording = False
            video_writer.release()
            video_writer = None

    cv2.imshow('YOLOv5 Detection', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()

if video_writer is not None:
    video_writer.release() 
